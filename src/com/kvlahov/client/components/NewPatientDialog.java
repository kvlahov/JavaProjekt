/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.kvlahov.client.components;

import com.kvlahov.controller.PatientController;
import com.kvlahov.model.Patient;
import com.kvlahov.model.enums.ContactType;
import com.kvlahov.model.enums.Sex;
import com.kvlahov.model.patientInfo.*;
import com.kvlahov.model.patientInfo.NextOfKin;
import com.kvlahov.utils.Utilities;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Container;
import java.awt.event.ActionEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.time.LocalDate;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import javax.swing.Box;
import javax.swing.DefaultComboBoxModel;
import javax.swing.InputVerifier;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import javax.swing.JSpinner;
import javax.swing.JTabbedPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;

/**
 *
 * @author lordo
 */
public class NewPatientDialog extends javax.swing.JDialog {

    /**
     * Creates new form NewPatientDialog
     */
    public NewPatientDialog(java.awt.Frame parent, boolean modal, Patient p, ExtendedPatientInformation ei) {
        super(parent, modal);

        patientModel = p;
        extendedInfoModel = ei;

        initComponents();
        initDialog();
        initContent();
        registerEvents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sexBtnGroup = new javax.swing.ButtonGroup();
        newPatientPanel = new javax.swing.JPanel();
        tabbedPane = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        basicInfoPane = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        formElementsContainer = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfFirstName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tfLastName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        rbMale = new javax.swing.JRadioButton();
        rbFemale = new javax.swing.JRadioButton();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        jLabel4 = new javax.swing.JLabel();
        tfDateOfBirth = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        tfComplaint = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        tfContact = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPanel25 = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        filler22 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        jLabel46 = new javax.swing.JLabel();
        filler21 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        jLabel47 = new javax.swing.JLabel();
        filler20 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        filler23 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        jPanel26 = new javax.swing.JPanel();
        tfNokName = new javax.swing.JTextField();
        tfNokSurname = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        tfNokContact = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        tfNokRelationship = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(700, 550));
        getContentPane().setLayout(new java.awt.CardLayout());

        newPatientPanel.setBackground(new java.awt.Color(232, 234, 242));
        newPatientPanel.setPreferredSize(new java.awt.Dimension(405, 228));
        newPatientPanel.setLayout(new java.awt.CardLayout());

        tabbedPane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabbedPaneStateChanged(evt);
            }
        });

        jScrollPane1.setPreferredSize(new java.awt.Dimension(400, 100));

        basicInfoPane.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 65, 5, 65));
        basicInfoPane.setName("newPatientPanel"); // NOI18N
        basicInfoPane.setLayout(new javax.swing.BoxLayout(basicInfoPane, javax.swing.BoxLayout.Y_AXIS));

        jScrollPane3.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        jScrollPane3.setPreferredSize(new java.awt.Dimension(100, 100));

        formElementsContainer.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 10, 10));
        formElementsContainer.setPreferredSize(new java.awt.Dimension(450, 1000));
        formElementsContainer.setLayout(new java.awt.GridLayout(0, 2, 10, 5));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("First Name");
        jLabel1.setName("firstName"); // NOI18N
        formElementsContainer.add(jLabel1);

        tfFirstName.setMargin(new java.awt.Insets(10, 10, 10, 10));
        tfFirstName.setName("patientName"); // NOI18N
        formElementsContainer.add(tfFirstName);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Last Name");
        jLabel2.setName("lastName"); // NOI18N
        formElementsContainer.add(jLabel2);

        tfLastName.setMargin(new java.awt.Insets(10, 10, 10, 10));
        tfLastName.setName("patientSurname"); // NOI18N
        formElementsContainer.add(tfLastName);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Sex");
        jLabel3.setName("sex"); // NOI18N
        formElementsContainer.add(jLabel3);

        jPanel1.setName("sexPanel"); // NOI18N
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.Y_AXIS));
        jPanel1.add(filler1);

        rbMale.setSelected(true);
        rbMale.setText("Male");
        rbMale.setName("rbSex"); // NOI18N
        jPanel1.add(rbMale);

        rbFemale.setText("Female");
        rbFemale.setName("rbSex"); // NOI18N
        jPanel1.add(rbFemale);
        jPanel1.add(filler2);

        formElementsContainer.add(jPanel1);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Date of Birth");
        jLabel4.setName("dateOfBirth"); // NOI18N
        formElementsContainer.add(jLabel4);

        tfDateOfBirth.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        tfDateOfBirth.setToolTipText("Enter date in format dd/mm/yyyy");
        tfDateOfBirth.setMargin(new java.awt.Insets(10, 10, 10, 10));
        tfDateOfBirth.setName("patientDateOfBirth"); // NOI18N
        formElementsContainer.add(tfDateOfBirth);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Brief Statement of Complaint");
        jLabel5.setName("statementOfComplaint"); // NOI18N
        formElementsContainer.add(jLabel5);

        tfComplaint.setMargin(new java.awt.Insets(10, 10, 10, 10));
        tfComplaint.setName("tfComplaint"); // NOI18N
        formElementsContainer.add(tfComplaint);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Contact Number");
        jLabel6.setName("contact"); // NOI18N
        formElementsContainer.add(jLabel6);

        tfContact.setInputVerifier(new IsNumberVerifier());
        tfContact.setMargin(new java.awt.Insets(10, 10, 10, 10));
        tfContact.setName("tfNumber"); // NOI18N
        formElementsContainer.add(tfContact);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("Next Of Kin");
        jLabel7.setName("nextOfKin"); // NOI18N
        formElementsContainer.add(jLabel7);

        jPanel25.setLayout(new javax.swing.BoxLayout(jPanel25, javax.swing.BoxLayout.LINE_AXIS));

        jPanel27.setLayout(new javax.swing.BoxLayout(jPanel27, javax.swing.BoxLayout.Y_AXIS));
        jPanel27.add(filler22);

        jLabel46.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel46.setText("First Name");
        jLabel46.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel46.setName("nokFirstName"); // NOI18N
        jPanel27.add(jLabel46);
        jPanel27.add(filler21);

        jLabel47.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel47.setText("Last Name");
        jLabel47.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel47.setName("nokLastName"); // NOI18N
        jPanel27.add(jLabel47);
        jPanel27.add(filler20);

        jPanel25.add(jPanel27);
        jPanel25.add(filler23);

        jPanel26.setLayout(new java.awt.GridLayout(0, 1));

        tfNokName.setMargin(new java.awt.Insets(10, 10, 10, 10));
        tfNokName.setName("tfNokFirstName"); // NOI18N
        jPanel26.add(tfNokName);

        tfNokSurname.setMargin(new java.awt.Insets(10, 10, 10, 10));
        tfNokSurname.setName("tfNokLastName"); // NOI18N
        jPanel26.add(tfNokSurname);

        jPanel25.add(jPanel26);

        formElementsContainer.add(jPanel25);

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel8.setText("Next of Kin contact");
        jLabel8.setName("nokRelationship"); // NOI18N
        formElementsContainer.add(jLabel8);

        tfNokContact.setInputVerifier(new IsNumberVerifier());
        tfNokContact.setMargin(new java.awt.Insets(10, 10, 10, 10));
        tfNokContact.setName("tfNokContact"); // NOI18N
        formElementsContainer.add(tfNokContact);

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel10.setText("Relationship to Outpatient");
        jLabel10.setName("nokRelationship"); // NOI18N
        formElementsContainer.add(jLabel10);

        tfNokRelationship.setMargin(new java.awt.Insets(10, 10, 10, 10));
        tfNokRelationship.setName("nokRelationship"); // NOI18N
        formElementsContainer.add(tfNokRelationship);

        jScrollPane3.setViewportView(formElementsContainer);

        basicInfoPane.add(jScrollPane3);

        jPanel3.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 1, 1, 1));
        jPanel3.setMaximumSize(new java.awt.Dimension(400, 250));
        jPanel3.setPreferredSize(new java.awt.Dimension(171, 39));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        btnSave.setText("Save");
        btnSave.setMaximumSize(new java.awt.Dimension(77, 23));
        btnSave.setPreferredSize(new java.awt.Dimension(77, 33));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel3.add(btnSave, new java.awt.GridBagConstraints());

        btnCancel.setText("Cancel");
        btnCancel.setPreferredSize(new java.awt.Dimension(77, 33));
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        jPanel3.add(btnCancel, new java.awt.GridBagConstraints());

        basicInfoPane.add(jPanel3);

        jScrollPane1.setViewportView(basicInfoPane);

        tabbedPane.addTab("Basic Info", jScrollPane1);

        newPatientPanel.add(tabbedPane, "card2");

        getContentPane().add(newPatientPanel, "card5");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        windowClosingHandler();

    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        Patient p = bindBasicInfoToPatient();

        if (p == null) {
            JOptionPane.showMessageDialog(null, "Every field is required", "Warning", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (p.hasIdSet()) {
            PatientController.updatePatient(p);
            JOptionPane.showMessageDialog(null, "Patient " + p.getId() + " succesfuly updated", "Success", JOptionPane.INFORMATION_MESSAGE);
        } else {
            int pid = PatientController.insertBasicInformation(p);
//            int pid = 1;
            p.setId(pid);
            JOptionPane.showMessageDialog(null, "Patient " + pid + " succesfuly saved", "Success", JOptionPane.INFORMATION_MESSAGE);
            tabbedPane.setEnabledAt(0, false);
        }
        patientModel = p;

        tabbedPane.setEnabledAt(1, true);
        tabbedPane.setSelectedIndex(1);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void tabbedPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabbedPaneStateChanged
        // TODO add your handling code here:
//        JTabbedPane tp = (JTabbedPane) evt.getSource();
//        int selected = tp.getSelectedIndex();
//        if (tp.getTitleAt(selected).equalsIgnoreCase("extended info")) {
//            addContactForm(nokContact, tfNokContact.getText());
//            addContactForm(contactInfoPane, tfContact.getText());
//            eiStatement.setText(tfComplaint.getText().trim());
//
////            PatientBinder.bindPatientToComponents();
//        }
    }//GEN-LAST:event_tabbedPaneStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewPatientDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewPatientDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewPatientDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewPatientDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            NewPatientDialog dialog = new NewPatientDialog(new javax.swing.JFrame(), true, null, null);
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel basicInfoPane;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler20;
    private javax.swing.Box.Filler filler21;
    private javax.swing.Box.Filler filler22;
    private javax.swing.Box.Filler filler23;
    private javax.swing.JPanel formElementsContainer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel newPatientPanel;
    private javax.swing.JRadioButton rbFemale;
    private javax.swing.JRadioButton rbMale;
    private javax.swing.ButtonGroup sexBtnGroup;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JTextField tfComplaint;
    private javax.swing.JTextField tfContact;
    private javax.swing.JFormattedTextField tfDateOfBirth;
    private javax.swing.JTextField tfFirstName;
    private javax.swing.JTextField tfLastName;
    private javax.swing.JTextField tfNokContact;
    private javax.swing.JTextField tfNokName;
    private javax.swing.JTextField tfNokRelationship;
    private javax.swing.JTextField tfNokSurname;
    // End of variables declaration//GEN-END:variables
    private CardLayout mainCardLayout;

    private Patient patientModel;
    private ExtendedPatientInformation extendedInfoModel;

    private void initDialog() {
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        final String title = patientModel == null ? "New patient" : "Edit patient";
        setTitle(title);
        setModal(true);
        setPreferredSize(new java.awt.Dimension(900, 700));
        setSize(new java.awt.Dimension(900, 700));

        setLocationRelativeTo(null);

//        getContentPane().setLayout(new java.awt.CardLayout());
    }

    private void initContent() {
        ExtendedInfoComponent eiComponent = new ExtendedInfoComponent();
        JScrollPane scrollPane = new JScrollPane(eiComponent);
        tabbedPane.addTab("Extended Information", scrollPane);
        
//        tabbedPane.setEnabledAt(1, false);
        sexBtnGroup.add(rbMale);
        sexBtnGroup.add(rbFemale);

        jScrollPane3.getVerticalScrollBar().setUnitIncrement(16);

        if (patientModel != null) {
            bindPatientToBIForm();

        }

    }

    private void registerEvents() {
        this.addWindowListener(new WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent evt) {
                windowClosingHandler();
            }
        });
    }

    private void windowClosingHandler() {
        int response = JOptionPane.showConfirmDialog(
                null, "Are you sure you want to exit?",
                "Exiting edit patient", JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE);
        if (response == JOptionPane.YES_OPTION) {
//            setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            dispose();
        } else {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        }
    }

    private void addContactForm(Container parent) {
        JPanel contactFormPane = new JPanel();
        contactFormPane.setName("contactForm");

        contactFormPane.setMaximumSize(new java.awt.Dimension(900, 50));
        contactFormPane.setPreferredSize(new java.awt.Dimension(443, 50));
        contactFormPane.setLayout(new javax.swing.BoxLayout(contactFormPane, javax.swing.BoxLayout.LINE_AXIS));

        JComboBox comboBox = new JComboBox();
        comboBox.setPreferredSize(new java.awt.Dimension(75, 20));
        comboBox.setModel(new DefaultComboBoxModel(ContactType.values()));

        JTextField tf = new JTextField();
        tf.setInputVerifier(new IsNumberVerifier());
        tf.setToolTipText("Must be number");

        contactFormPane.add(comboBox);
        contactFormPane.add(Box.createHorizontalStrut(10));
        contactFormPane.add(tf);

        parent.add(contactFormPane);

        //Set names
        String tfName = "";
        String cbName = "";
        String grandparentName = comboBox.getParent().getParent().getName();

        String selectedItem = comboBox.getSelectedItem().toString();
        comboBox.setName(grandparentName + cbName + selectedItem);

        tf.setName(grandparentName + tfName + selectedItem);

        comboBox.addItemListener(e -> {
            JComboBox cb = (JComboBox) e.getSource();
            String selectedItem1 = cb.getSelectedItem().toString();
            cb.setName(grandparentName + cbName + selectedItem1);

            Component sibling = Stream.of(cb.getParent().getComponents())
                    .filter(c -> c instanceof JTextField)
                    .findFirst()
                    .get();
            sibling.setName(grandparentName + tfName + selectedItem1);
        });

    }

    private void addContactForm(Container parent, String initialText) {
        JPanel contactFormPane = new JPanel();
        contactFormPane.setName("contactForm");

        contactFormPane.setMaximumSize(new java.awt.Dimension(900, 50));
        contactFormPane.setPreferredSize(new java.awt.Dimension(443, 50));
        contactFormPane.setLayout(new javax.swing.BoxLayout(contactFormPane, javax.swing.BoxLayout.LINE_AXIS));

        JComboBox comboBox = new JComboBox();
        comboBox.setPreferredSize(new java.awt.Dimension(75, 20));
        comboBox.setModel(new DefaultComboBoxModel(ContactType.values()));
        comboBox.setSelectedItem(ContactType.MOBILE);

        JTextField tf = new JTextField(initialText);
        tf.setInputVerifier(new IsNumberVerifier());
        tf.setToolTipText("Must be number");
        tf.setEnabled(false);

        contactFormPane.add(comboBox);
        contactFormPane.add(Box.createHorizontalStrut(10));
        contactFormPane.add(tf);

        parent.add(contactFormPane);

        //Set names
        String tfName = "";
        String cbName = "";
        String grandparentName = comboBox.getParent().getParent().getName();

        String selectedItem = comboBox.getSelectedItem().toString();
        comboBox.setName(grandparentName + cbName + selectedItem);

        tf.setName(grandparentName + tfName + selectedItem);

        comboBox.addItemListener(e -> {
            JComboBox cb = (JComboBox) e.getSource();
            String selectedItem1 = cb.getSelectedItem().toString();
            cb.setName(grandparentName + cbName + selectedItem1);

            Component sibling = Stream.of(cb.getParent().getComponents())
                    .filter(c -> c instanceof JTextField)
                    .findFirst()
                    .get();
            sibling.setName(grandparentName + tfName + selectedItem1);
        });

    }

    private Patient bindBasicInfoToPatient() {
        Patient p = new Patient(null, null, Sex.MALE, LocalDate.MIN);
        p.setName(tfFirstName.getText().trim());
        p.setSurname(tfLastName.getText().trim());
        p.setDateOfBirth(Utilities.toLocalDate((Date) tfDateOfBirth.getValue()));

        String actionCmnd = rbMale.isSelected() ? "Male" : "Female";
        p.setSex(Sex.valueOf(actionCmnd.toUpperCase()));

        NextOfKin nok = new NextOfKin(
                tfNokName.getText().trim(),
                tfNokSurname.getText().trim(),
                tfNokRelationship.getText().trim());

        ContactInfo contact = new ContactInfo();
        List<Contact> contacts = new ArrayList<>();
        contacts.add(new Contact(ContactType.MOBILE, tfNokContact.getText().trim()));
        contact.setContacts(contacts);
        nok.setContactInformation(contact);
        nok.setRelationshipToPatient(tfNokRelationship.getText().trim());

//        p.setNextOfKin(nok);
        p.setContact(tfContact.getText().trim());
//        p.setStmtOfComplaint(tfComplaint.getText().trim());

        return p;
    }

    private void bindPatientToBIForm() {
        if (patientModel == null) {
            return;
        }

        tfFirstName.setText(patientModel.getName());
        tfLastName.setText(patientModel.getSurname());
        tfDateOfBirth.setValue(Utilities.toDate(patientModel.getDateOfBirth().atStartOfDay()));
        if (patientModel.getSex().toString().equalsIgnoreCase("male")) {
            rbMale.setSelected(true);
        } else {
            rbFemale.setSelected(true);
        }
        tfComplaint.setText(extendedInfoModel.getComplaints().getStatementComplaint());
        String contact = extendedInfoModel.getContactInfo().getContacts().get(0).getContact();

        tfContact.setText(contact);
        NextOfKin nok = extendedInfoModel.getNextOfKin();
        tfNokContact.setText(nok
                .getContactInformation()
                .getContacts()
                .get(0)
                .getContact());

        tfNokName.setText(nok.getName());
        tfNokRelationship.setText(nok.getRelationshipToPatient());
        tfNokSurname.setText(nok.getSurname());

    }

    static class IsNumberVerifier extends InputVerifier {

        @Override
        public boolean verify(JComponent input) {
            String text = ((JTextField) input).getText();
            try {
                text.chars()
                        .mapToObj(c -> (char) c)
                        .map(c -> String.valueOf(c))
                        .forEach(s -> Integer.parseInt(s));
                return true;
            } catch (NumberFormatException e) {
                return false;
            }
        }

    }

    static class IsFloatVerifier extends InputVerifier {

        @Override
        public boolean verify(JComponent input) {
            String text = ((JTextField) input).getText();
            try {
                Float.parseFloat(text);
                return true;
            } catch (NumberFormatException e) {
                return false;
            }
        }

    }
}
