/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.kvlahov.client.components;

import com.kvlahov.model.enums.ContactType;
import com.kvlahov.model.patientInfo.Contact;
import java.awt.GridBagConstraints;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import javax.swing.JPanel;

/**
 *
 * @author lordo
 */
public class ContactsComponent extends javax.swing.JPanel {
    private List<ContactType> contactTypes;
    private List<Contact> contacts = new ArrayList<>();

    public ContactsComponent(List<ContactType> contactTypes) {
        this.contactTypes = contactTypes;
        initComponents();
    }

    public List<Contact> getContacts() {
        bindUITOModel();
        return contacts;
    }

    public void setContacts(List<Contact> contacts) {
        this.contacts = contacts;
        updateContacts();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        contactListPane = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jPanel2.add(btnAdd);

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });
        jPanel2.add(btnRemove);

        add(jPanel2, java.awt.BorderLayout.PAGE_START);

        contactListPane.setLayout(new javax.swing.BoxLayout(contactListPane, javax.swing.BoxLayout.Y_AXIS));
        add(contactListPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        addBlankContactComponent();
    }//GEN-LAST:event_btnAddActionPerformed

    private void addBlankContactComponent() {
        // TODO add your handling code here:
        contactListPane.add(new SingleContactComponent(contactTypes));
    }

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        int lastComponentIndex = contactListPane.getComponentCount() - 1;
        contactListPane.remove(lastComponentIndex);
    }//GEN-LAST:event_btnRemoveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnRemove;
    private javax.swing.JPanel contactListPane;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables

    private void updateContacts() {
        contacts.forEach(c -> addContactComponent(c));
    }

    private void addContactComponent(Contact c) {
        SingleContactComponent component = new SingleContactComponent(contactTypes);
        component.setContact(c);
    }

    private void bindUITOModel() {
        contacts = Stream.of(contactListPane.getComponents())
                .filter(c -> c instanceof SingleContactComponent)
                .map(c -> (SingleContactComponent) c)
                .map(c -> c.getContact())
                .collect(Collectors.toList());
                
    }
}
