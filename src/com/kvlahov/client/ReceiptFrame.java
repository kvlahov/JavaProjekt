/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.kvlahov.client;

import com.kvlahov.client.components.ReceiptComponent;
import com.kvlahov.controller.ReceiptController;
import com.kvlahov.exceptions.InvalidModelException;
import com.kvlahov.model.Patient;
import com.kvlahov.model.Receipt;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;

/**
 *
 * @author Travelino
 */
public class ReceiptFrame extends javax.swing.JFrame {

    private Receipt receipt;
    private boolean showEditMode;
    private Patient patient;
    private LocalDate appointmentDate;

    private ReceiptComponent rc;

    public ReceiptFrame(Receipt receipt, boolean showEditMode, Patient patient, LocalDate appointmentDate) {
        this.receipt = receipt;
        this.showEditMode = showEditMode;
        this.patient = patient;
        this.appointmentDate = appointmentDate;

        initComponents();
        initFrame();
        initButtons();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new java.awt.BorderLayout());

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel1.add(btnSave);

        btnCancel.setText("Close");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancel);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        Receipt r = rc.getReceipt();
        try {
            ReceiptController.insertReceipt(r);
            JOptionPane.showMessageDialog(this.getRootPane(), "Receipt succesfully added", "Success", JOptionPane.INFORMATION_MESSAGE);
        } catch (InvalidModelException ex) {
            JOptionPane.showMessageDialog(this.getRootPane(), r.getValidationErrors(), "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            dispose();
        }
        System.out.println(r.getDate());
        System.out.println(r.getPatientId());
        System.out.println(r.getPaymentMethod().getId());
        System.out.println(r.getReceiptNumber());
        System.out.println(r.getTotal());
        r.getItems().forEach((i) -> System.out.println(i.getService().toString()));

    }//GEN-LAST:event_btnSaveActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        int response = JOptionPane.showConfirmDialog(
                null, "Are you sure you want to exit?",
                "Exiting", JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE);
        if (response == JOptionPane.YES_OPTION) {
            dispose();
        } else {
            setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        }
    }//GEN-LAST:event_formWindowClosing

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    private void initFrame() {
        setPreferredSize(new Dimension(800, 600));
        setSize(new Dimension(800, 600));
        rc = new ReceiptComponent(receipt, patient, appointmentDate);
        if (showEditMode) {
            rc.setEditMode(ReceiptController.getAllPaymentMethods());

        }
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        getContentPane().add(rc, BorderLayout.CENTER);
    }

    private void initButtons() {
        if (showEditMode) {
            btnSave.setVisible(true);
        } else {
            btnSave.setVisible(false);
            btnCancel.setText("Close");
        }
    }
}
